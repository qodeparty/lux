/* //////////////////////////////////////////////////////////////////////////////
// Lux Flex Block
////////////////////////////////////////////////////////////////////////////// */

.wrapper,
{$cl_blocks},
{$cl_block},
{$cl_block_item}
  position relative


// {$cl_attr_block_pre_any} > {$cl_attr_block_pre_any},
// {$cl_attr_block_pre_any} > {$cl_block},
// {$cl_block} > {$cl_attr_block_pre_any},
// {$cl_block} > {$cl_block}
//   flex 0 0

{$cl_block_item}
  align-self stretch
    
// {$cl_blocks}.with-gaps {$cl_attr_block_pre_any}
//   margin __rem(12) 0

.with-gaps {$cl_attr_block_pre_any}{$cl_attr_right}
  margin-left __rem(4)
  
.with-gaps {$cl_attr_block_pre_any}{$cl_attr_left}
  margin-right __rem(4)
  
.with-gaps {$cl_attr_block_pre_any}{$cl_attr_ctr}
  margin 0 __rem(4)
  
.with-gaps {$cl_block}
  margin __rem(4) 0

  
{$cl_block}
  display flex /* display block on non-mobile */
  align-items center
  justify-content space-between
  flex-wrap wrap
  

  
//$block_main_placheholder
{$cl_attr_block_pre_any}
  display flex
  align-items center
  flex-basis auto
  flex-shrink 0
  // flex-wrap wrap
  // max-width 100%


+__block_pre($attr_vert)
  flex-direction column

+__block_pre($attr_right)
  justify-content flex-end
  flex-grow 0

+__block_pre($attr_left)
  justify-content flex-start
  flex-grow 0  

+__block_pre($attr_ctr)
  justify-content center
  margin 0 auto
  flex-grow 1 

+__block_pre($attr_item)
  align-items center
  flex-basis auto
  justify-content center
  flex 1 0 

+__block_pre($attr_auto)
  flex-grow 1
  max-width 100%
  min-width __rem(50)
  padding 2px

+__block_pre_elm('button',$attr_auto)
  display block
  margin 0 auto

.block-spacer
  display block
  background transparent
  //width __rem(4)

// .block-vspacer
//   display block
//   background transparent
//   height 300px
//   padding 1rem
  
+__block_pre($attr_fixed)
  display block
  flex-wrap nowrap
  flex-basis 100%

.block-breaker
  flex-basis 100%
  margin 0
  padding 0
  background transparent
  display block


.as-tiles {$cl_block}:not(.block-item),
.as-tiles {$cl_attr_block_pre_any}:not(.block-item)
  display flex

+__desktop()
  for $i in (1..$basis)
    {$cl_block}{$pre_is}{$i},
    {$cl_attr_block_pre_any}{$pre_is}{$i},
    {$cl_layout_col}{$pre_is}{$i}
      width round( percentage( $i/$basis ), 3 )
      flex none
       
+__mobile()
  .as-tiles {$cl_block}:not(.block-item)
    display block
      
  {$cl_block},
  {$cl_attr_block_pre_any}:not(.block-spacer)
    display block
  {$cl_block_item}
    flex-grow 0
  {$cl_block_item} input /* is this necessary */
    max-width 100%
  +__block_pre($attr_auto)
    width 100%
  {$cl_blocks}.with-gaps {$cl_attr_block_pre_any}
    margin 0 0
    margin __rem(4) 0
    
  +__block_pre_elm('button',$attr_auto)
    width 100%
    display block
    margin 0 auto

  
.as-tiles {$cl_block_left},
.as-tiles {$cl_block_right},
.as-tiles {$cl_block_ctr},
.as-tiles {$cl_block_vert},
.as-tiles {$cl_block_auto},
.as-tiles {$cl_block},
.as-tiles {$cl_block_item}
  align-items stretch
  min-height min-content
  flex-grow 1
  flex-shrink 1
  flex-basis 0
  display block

  //__inner_border(1px,#fff)
    

