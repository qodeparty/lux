/* //////////////////////////////////////////////////////////////////////////////
// Util
////////////////////////////////////////////////////////////////////////////// */

  __join()
    join('',arguments)


  // __root()
  //   __var_def('size-2',$size-2)
  //   __var_def('size-3',$size-3)
  //   weight __var('size-3',$size-3)
   
/* //////////////////////////////////////////////////////////////////////////////
// FX
////////////////////////////////////////////////////////////////////////////// */
    
  __fontsize($ref="")
    $$s=$sizes
    $$l=$size_labels
    $ref = fx_str_len($ref) > 1 ? __join('-',$ref) : ""
    for $size in $$s
      $i = index($$s,$size)
      $lbl = $$l[$i]
      &{$pre_size}{$lbl}{$ref}
        font-size: $$s[$i]
 


  __basis_width($slot)
    round( percentage( $slot/$basis ), 3 )    

  __natural_basis($i)
    if $use_natural
      $cl=fx_perc_frac($i)    
      if $cl    
        return unquote($pre_is + $cl)


 
/* //////////////////////////////////////////////////////////////////////////////
// CSS Vars
////////////////////////////////////////////////////////////////////////////// */   

 //returns var(--val) or just val
  __var($key,$val)
    unquote(fx_css_var($key,$val))
 
 //--key:val
  __var_def($key,$val)
    if fx_css_canvar() == true
      add-property('--'+$key,$val)
      
/* //////////////////////////////////////////////////////////////////////////////
// Config
////////////////////////////////////////////////////////////////////////////// */  
 
  __config($key)
    $this = fx_get_config($key)
    if typeof($this) == 'string'
     unquote($this)
    else if typeof($this) == 'null'
      p($key + ' => ' +typeof($this))
    else 
      $this
    
  __device()
    1
    
  __size_meta($key)
    $this = fx_size_meta($key)
    if typeof($this) == 'string'
     unquote($this)
    else if typeof($this) == 'null'
      p($key + ' => ' +typeof($this))
    else 
      $this
        

/* //////////////////////////////////////////////////////////////////////////////
// Units
////////////////////////////////////////////////////////////////////////////// */   
  __em($val,$offset=0)
    p($val,$basis)
    $val = $val / $basis
    unquote(__join($val,'em'))

  __rem($val,$offset=0)
    $val = ( $val - $offset ) / $basis //calculate px offset before conversion
    unquote(__join($val,'rem'))


/* //////////////////////////////////////////////////////////////////////////////
// Units
////////////////////////////////////////////////////////////////////////////// */   
  
  __attr_class($name,$type=$attr_in)
    //fx_debug(arguments)
    $name = replace('\.', '', $name)
    $this = join('', '[class' $type '"' unquote($name) '"]' )
    return $this

  __undot($class)
    return( replace('\.', '', $class))


  __attr_short($short,$long)
    return $short_attr ? $short : $long
